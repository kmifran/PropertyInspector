package sit374_team17.propertyinspector;


import android.os.Parcel;
import android.os.Parcelable;

import com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBAttribute;
import com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBAutoGeneratedKey;
import com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBHashKey;
import com.amazonaws.mobileconnectors.dynamodbv2.dynamodbmapper.DynamoDBTable;

import java.util.ArrayList;
import java.util.List;

@DynamoDBTable(tableName = "Property")
public class DB_Property implements Parcelable {
    private String id;
    private Integer unitNumber;
    private Integer streetNumber;
    private String streetName;
    private String city;
    private List<String>state=new ArrayList<>();
    private Integer postCode;
    private ArrayList<String> type;
    private List<String> bedrooms;
    private List <String>bathrooms;
    private List<String> cars;
    private List<Integer> price;
    private List<Integer> ratings;
    private List<String> rentBuy;
    private List<String> leaseLength;
    private String description;
    private String Comments;
    private String Inspection_date;
    private String Inspection_time;
    private String photo;

    public DB_Property(){};

    public void setId(String id) {this.id = id;}
    @DynamoDBHashKey(attributeName = "PropertyID")
    @DynamoDBAutoGeneratedKey
    public String getId() {
        return id;
    }

    public void setUnitNumber(Integer unitNumber) {this.unitNumber = unitNumber;}
    @DynamoDBAttribute(attributeName = "UnitNumber")
    public Integer getUnitNumber() {
        return unitNumber;
    }

    public void setStreetNumber(Integer streetNumber) {this.streetNumber = streetNumber;}
    @DynamoDBAttribute(attributeName = "StreetNumber")
    public Integer getStreetNumber() {
        return streetNumber;
    }

    public void setStreetName(String streetName) {this.streetName = streetName;}
    @DynamoDBAttribute(attributeName = "StreetName")
    public String getStreetName() {
        return streetName;
    }

    public void setCity(String city) {this.city = city;}
    @DynamoDBAttribute(attributeName = "Suburb")
    public String getCity() {
        return city;
    }

    public void setState(List<String> state) {this.state = state;}
    @DynamoDBAttribute(attributeName = "State")
    public List<String> getState() {
        return state;
    }

    public void setPostCode( Integer  postCode) {this.postCode = postCode;}
   @DynamoDBAttribute(attributeName = "PostCode")
    public  Integer  getPostCode() {
        return postCode;
       }

    public void setType(List<String> state) {this.type = type;}
    @DynamoDBAttribute(attributeName = "HouseType")
    public List<String> getType() {
        return type;
    }

    public void setBedrooms(List<String> bedrooms) {this.bedrooms = bedrooms;}
    @DynamoDBAttribute(attributeName = "Bedroom")
    public List<String> getBedrooms() {
        return bedrooms;
    }

    public void setBathrooms(List<String> bathrooms) {this.bathrooms = bathrooms;}
    @DynamoDBAttribute(attributeName = "Bathroom")
    public List<String> getBathrooms() {
        return bathrooms;
    }

    public void setCars(List<String> cars) {this.cars = cars;}
    @DynamoDBAttribute(attributeName = "Car space")
    public List<String> getCars() {
        return cars;
    }

    public void setPrice(List<Integer> price) {this.price = price;}
    @DynamoDBAttribute(attributeName = "Price")
    public List<Integer> getPrice() {
        return price;
    }

    public void setRentBuy(List<String> rentBuy) {this.rentBuy = rentBuy;}
    @DynamoDBAttribute(attributeName = "Rent/Buy")
    public List<String> getRentBuy() {
        return rentBuy;
    }

    public void setLeaseLength(List<String> leaseLength) {this.leaseLength = leaseLength;}
    @DynamoDBAttribute(attributeName = "Lease Length")
    public List<String> getLeaseLength() {
        return leaseLength;
    }

    public void setDescription(String description) {this.description = description;}
    @DynamoDBAttribute(attributeName = "Description")
    public String getDescription() {
        return description;
    }


    public void setPhoto(String photo) {this.photo = photo;}
    @DynamoDBAttribute(attributeName = "Title")
    public String getPhoto() {
        return photo;
    }

    @DynamoDBAttribute(attributeName = "Comments")
    public String getComments() { return Comments; }
    public void setComments(String comments) {
        Comments = comments;
    }

    public String getInspection_date() {return Inspection_date; }
    @DynamoDBAttribute(attributeName = "Inspection Date")
    public void setInspection_date(String inspection_date) {
        Inspection_date = inspection_date;
    }

    @DynamoDBAttribute(attributeName = "Inspection Time")
    public String getInspection_time() {  return Inspection_time; }
    public void setInspection_time(String inspection_time) {
        Inspection_time = inspection_time;
    }

    @DynamoDBAttribute(attributeName = "Ratings")
    public List<Integer> getRatings() { return ratings;}
    public void setRatings(List<Integer> ratings) {
        this.ratings = ratings;
    }


    protected DB_Property(Parcel in) {
        id = in.readString();
        unitNumber = in.readInt();
        streetNumber = in.readInt();
        streetName = in.readString();
        city = in.readString();
        in.readList(state,ClassLoader.getSystemClassLoader());
        postCode = in.readInt();
        in.readList(type,ClassLoader.getSystemClassLoader());
        in.readList(bedrooms,ClassLoader.getSystemClassLoader());
        in.readList(bathrooms,ClassLoader.getSystemClassLoader());
        in.readList(cars,ClassLoader.getSystemClassLoader());
        in.readList(price,ClassLoader.getSystemClassLoader());
        in.readList(rentBuy,ClassLoader.getSystemClassLoader());
        in.readList(leaseLength,ClassLoader.getSystemClassLoader());
        description = in.readString();
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
    try {
        dest.writeString(id);
        dest.writeInt(unitNumber);
        dest.writeInt(streetNumber);
        dest.writeString(streetName);
        dest.writeString(city);
        dest.writeList(state);
        dest.writeInt(postCode);
        dest.writeList(type);
        dest.writeList(bedrooms);
        dest.writeList(bathrooms);
        dest.writeList(cars);
        dest.writeList(price);
        dest.writeList(rentBuy);
        dest.writeList(leaseLength);
        dest.writeString(description);
    }catch (NullPointerException e){}
    }

    @Override
    public int describeContents() {
        return 0;
    }

    public static final Creator<Property> CREATOR = new Creator<Property>() {
        @Override
        public Property createFromParcel(Parcel in) {
            return new Property(in);
        }

        @Override
        public Property[] newArray(int size) {
            return new Property[size];
        }
    };
}